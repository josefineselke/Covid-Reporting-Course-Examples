{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "factoryName": {
            "type": "string",
            "metadata": "Data Factory name",
            "defaultValue": "Covid-Reporting-Selke"
        },
        "AzureDataLakeStorage1_accountKey": {
            "type": "secureString",
            "metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorage1'"
        },
        "ls_ablob_covidreportingstorageselke_connectionString": {
            "type": "secureString",
            "metadata": "Secure string for 'connectionString' of 'ls_ablob_covidreportingstorageselke'"
        },
        "ls_adls_covidreportingslselke_accountKey": {
            "type": "secureString",
            "metadata": "Secure string for 'accountKey' of 'ls_adls_covidreportingslselke'"
        },
        "ls_databricks_reporting_accessToken": {
            "type": "secureString",
            "metadata": "Secure string for 'accessToken' of 'ls_databricks_reporting'"
        },
        "ls_sql_covid_db_password": {
            "type": "secureString",
            "metadata": "Secure string for 'password' of 'ls_sql_covid_db'"
        },
        "AzureDataLakeStorage1_properties_typeProperties_url": {
            "type": "string",
            "defaultValue": "https://covidreporingdlselke.dfs.core.windows.net/"
        },
        "ls_adls_covidreportingslselke_properties_typeProperties_url": {
            "type": "string",
            "defaultValue": "https://covidreporingdlselke.dfs.core.windows.net/"
        },
        "ls_databricks_reporting_properties_typeProperties_existingClusterId": {
            "type": "string",
            "defaultValue": "0822-091957-xpmvf2np"
        },
        "ls_http_github_properties_typeProperties_url": {
            "type": "string",
            "defaultValue": "@{linkedService().sourceBaseURL}"
        },
        "ls_sql_covid_db_properties_typeProperties_server": {
            "type": "string",
            "defaultValue": "covid-reporting-selke.database.windows.net"
        },
        "ls_sql_covid_db_properties_typeProperties_database": {
            "type": "string",
            "defaultValue": "covidreportingsqlselke"
        },
        "ls_sql_covid_db_properties_typeProperties_userName": {
            "type": "string",
            "defaultValue": "admin-sql"
        },
        "tr_population_data_arrive_properties_typeProperties_scope": {
            "type": "string",
            "defaultValue": "/subscriptions/420c674f-689a-49fb-99fc-8017f16ecebf/resourceGroups/Covid-Reporting/providers/Microsoft.Storage/storageAccounts/reportingstorageselke"
        }
    },
    "variables": {
        "factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
    },
    "resources": [
        {
            "name": "[concat(parameters('factoryName'), '/pl_dataflow_admissions')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "DataflowHospitalAdmissions",
                        "type": "ExecuteDataFlow",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataflow": {
                                "referenceName": "df_transform_hospitalizations",
                                "type": "DataFlowReference",
                                "parameters": {},
                                "datasetParameters": {
                                    "SourceHospitalAdmissions": {},
                                    "CountryLookup": {},
                                    "DimDate": {},
                                    "SinkWeekly": {},
                                    "SinkDaily": {}
                                }
                            },
                            "staging": {},
                            "compute": {
                                "coreCount": 8,
                                "computeType": "General"
                            },
                            "traceLevel": "Fine"
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "folder": {
                    "name": "Process"
                },
                "annotations": [],
                "lastPublishTime": "2024-08-23T11:53:52Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/dataflows/df_transform_hospitalizations')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/pl_dataflow_cases_deaths')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "df_transform",
                        "type": "ExecuteDataFlow",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataflow": {
                                "referenceName": "df_transform_cases_deaths",
                                "type": "DataFlowReference",
                                "parameters": {},
                                "datasetParameters": {
                                    "SourceCasesDeaths": {},
                                    "CountryLookup": {},
                                    "CasesDeathSink": {}
                                }
                            },
                            "staging": {},
                            "compute": {
                                "coreCount": 8,
                                "computeType": "General"
                            },
                            "traceLevel": "Fine"
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "folder": {
                    "name": "Process"
                },
                "annotations": [],
                "lastPublishTime": "2024-08-23T11:53:52Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/dataflows/df_transform_cases_deaths')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/pl_execute_population_pipelines')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Execute Ingest Population Data",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "policy": {
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "pl_ingest_population_data",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {}
                        }
                    },
                    {
                        "name": "Execute Pipeline1",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "Execute Ingest Population Data",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "pl_process_population_data",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {}
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "folder": {
                    "name": "Execute"
                },
                "annotations": [],
                "lastPublishTime": "2024-08-23T13:42:25Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/pl_ingest_population_data')]",
                "[concat(variables('factoryId'), '/pipelines/pl_process_population_data')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/pl_ingest_population_data')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "vd_population_raw_gz",
                        "type": "Validation",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "ds_population_raw_gz",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "timeout": "1.00:00:00",
                            "sleep": 600,
                            "minimumSize": 1024
                        }
                    },
                    {
                        "name": "If Condition1",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "Get Metadata1",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@equals(activity('Get Metadata1').output.columnCount,13 )",
                                "type": "Expression"
                            },
                            "ifTrueActivities": [
                                {
                                    "name": "Copy Population Data_copy1",
                                    "type": "Copy",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.00:10:00",
                                        "retry": 3,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "DelimitedTextSource",
                                            "storeSettings": {
                                                "type": "AzureBlobStorageReadSettings",
                                                "recursive": true,
                                                "enablePartitionDiscovery": false
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextReadSettings"
                                            }
                                        },
                                        "sink": {
                                            "type": "DelimitedTextSink",
                                            "storeSettings": {
                                                "type": "AzureBlobFSWriteSettings"
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextWriteSettings",
                                                "quoteAllText": true,
                                                "fileExtension": ".txt"
                                            }
                                        },
                                        "enableStaging": false,
                                        "translator": {
                                            "type": "TabularTranslator",
                                            "typeConversion": true,
                                            "typeConversionSettings": {
                                                "allowDataTruncation": true,
                                                "treatBooleanAsNumber": false
                                            }
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "ds_population_raw_gz",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "ds_population_raw_tsv",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        }
                                    ]
                                },
                                {
                                    "name": "Delete1",
                                    "type": "Delete",
                                    "dependsOn": [
                                        {
                                            "activity": "Copy Population Data_copy1",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "dataset": {
                                            "referenceName": "ds_population_raw_gz",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        },
                                        "logStorageSettings": {
                                            "linkedServiceName": {
                                                "referenceName": "ls_ablob_covidreportingstorageselke",
                                                "type": "LinkedServiceReference"
                                            }
                                        },
                                        "enableLogging": true,
                                        "storeSettings": {
                                            "type": "AzureBlobStorageReadSettings",
                                            "recursive": true,
                                            "enablePartitionDiscovery": false
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Get Metadata1",
                        "type": "GetMetadata",
                        "dependsOn": [
                            {
                                "activity": "vd_population_raw_gz",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "ds_population_raw_gz",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "fieldList": [
                                "size",
                                "columnCount",
                                "exists"
                            ],
                            "storeSettings": {
                                "type": "AzureBlobStorageReadSettings",
                                "recursive": true,
                                "enablePartitionDiscovery": false
                            },
                            "formatSettings": {
                                "type": "DelimitedTextReadSettings"
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "folder": {
                    "name": "Ingestion"
                },
                "annotations": [],
                "lastPublishTime": "2024-08-23T11:53:52Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/ds_population_raw_gz')]",
                "[concat(variables('factoryId'), '/datasets/ds_population_raw_tsv')]",
                "[concat(variables('factoryId'), '/linkedServices/ls_ablob_covidreportingstorageselke')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/pl_ingest_raw_data')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Lookup ECDC File List",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "JsonSource",
                                "storeSettings": {
                                    "type": "AzureBlobStorageReadSettings",
                                    "recursive": true,
                                    "enablePartitionDiscovery": false
                                },
                                "formatSettings": {
                                    "type": "JsonReadSettings"
                                }
                            },
                            "dataset": {
                                "referenceName": "ds_github_ecdc_filelist",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "Execute Copy for every record",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Lookup ECDC File List",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Lookup ECDC File List').output.value",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "copy_ecdc_data_copy",
                                    "type": "Copy",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "DelimitedTextSource",
                                            "storeSettings": {
                                                "type": "HttpReadSettings",
                                                "requestMethod": "GET"
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextReadSettings"
                                            }
                                        },
                                        "sink": {
                                            "type": "DelimitedTextSink",
                                            "storeSettings": {
                                                "type": "AzureBlobFSWriteSettings"
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextWriteSettings",
                                                "quoteAllText": true,
                                                "fileExtension": ".txt"
                                            }
                                        },
                                        "enableStaging": false,
                                        "translator": {
                                            "type": "TabularTranslator",
                                            "typeConversion": true,
                                            "typeConversionSettings": {
                                                "allowDataTruncation": true,
                                                "treatBooleanAsNumber": false
                                            }
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "ds_githubECDCdata_HTTP",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "relativeURL": {
                                                    "value": "@item().sourceRelativeURL",
                                                    "type": "Expression"
                                                },
                                                "baseURL": {
                                                    "value": "@item().sourceBaseURL",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "ds_githubECDCdata_dl",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "filename": {
                                                    "value": "@item().sinkFileName",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "folder": {
                    "name": "Ingestion"
                },
                "annotations": [],
                "lastPublishTime": "2024-08-23T11:53:52Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/ds_github_ecdc_filelist')]",
                "[concat(variables('factoryId'), '/datasets/ds_githubECDCdata_HTTP')]",
                "[concat(variables('factoryId'), '/datasets/ds_githubECDCdata_dl')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/pl_process_population_data')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Notebook execution",
                        "type": "DatabricksNotebook",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/covid/setup/transform_population_data"
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_databricks_reporting",
                            "type": "LinkedServiceReference"
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "folder": {
                    "name": "Process"
                },
                "annotations": [],
                "lastPublishTime": "2024-08-23T11:53:52Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/ls_databricks_reporting')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/pl_sqlize_cases_deaths')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Copy cases and deaths",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "DelimitedTextSource",
                                "storeSettings": {
                                    "type": "AzureBlobFSReadSettings",
                                    "recursive": true,
                                    "enablePartitionDiscovery": false
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextReadSettings"
                                }
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "preCopyScript": "TRUNCATE TABLE covid_reporting.cases_and_deaths;",
                                "writeBehavior": "insert",
                                "sqlWriterUseTableLock": false,
                                "disableMetricsCollection": false
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_cases_deaths_processed",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_sql_cases_deaths",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "folder": {
                    "name": "SQLize"
                },
                "annotations": [],
                "lastPublishTime": "2024-08-23T11:53:52Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/ds_cases_deaths_processed')]",
                "[concat(variables('factoryId'), '/datasets/ds_sql_cases_deaths')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/pl_sqlize_hospital_admissions')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Copy hospital admission daily data",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "DelimitedTextSource",
                                "storeSettings": {
                                    "type": "AzureBlobFSReadSettings",
                                    "recursive": true,
                                    "enablePartitionDiscovery": false
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextReadSettings"
                                }
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "preCopyScript": "TRUNCATE TABLE covid_reporting.hospital_admissions_daily;",
                                "writeBehavior": "insert",
                                "sqlWriterUseTableLock": false,
                                "disableMetricsCollection": false
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "country",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "country",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "country_code_2_digit",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "country_code_2_digit",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "country_code_3_digit",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "country_code_3_digit",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "population",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "population",
                                            "type": "Int64",
                                            "physicalType": "bigint"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "reported_date",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "reported_date",
                                            "type": "DateTime",
                                            "physicalType": "date"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "hospital_occupancy_count",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "hospital_occupancy_count",
                                            "type": "Int64",
                                            "physicalType": "bigint"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "icu_occupancy_count",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "icu_occupancy_count",
                                            "type": "Int64",
                                            "physicalType": "bigint"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "source",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "source",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        }
                                    }
                                ],
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_daily_hospital_admissions",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_sql_daily_admissions",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "folder": {
                    "name": "SQLize"
                },
                "annotations": [],
                "lastPublishTime": "2024-08-23T11:53:52Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/ds_daily_hospital_admissions')]",
                "[concat(variables('factoryId'), '/datasets/ds_sql_daily_admissions')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/pl_sqlize_testing')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Copy Testing",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "DelimitedTextSource",
                                "storeSettings": {
                                    "type": "AzureBlobFSReadSettings",
                                    "recursive": true,
                                    "enablePartitionDiscovery": false
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextReadSettings"
                                }
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "preCopyScript": "TRUNCATE TABLE covid_reporting.testing;",
                                "writeBehavior": "insert",
                                "sqlWriterUseTableLock": false,
                                "disableMetricsCollection": false
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "type": "String",
                                            "ordinal": 1
                                        },
                                        "sink": {
                                            "name": "country",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "type": "String",
                                            "ordinal": 2
                                        },
                                        "sink": {
                                            "name": "country_code_2_digit",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "type": "String",
                                            "ordinal": 3
                                        },
                                        "sink": {
                                            "name": "country_code_3_digit",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "type": "String",
                                            "ordinal": 4
                                        },
                                        "sink": {
                                            "name": "year_week",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "type": "String",
                                            "ordinal": 5
                                        },
                                        "sink": {
                                            "name": "week_start_date",
                                            "type": "DateTime",
                                            "physicalType": "date"
                                        }
                                    },
                                    {
                                        "source": {
                                            "type": "String",
                                            "ordinal": 6
                                        },
                                        "sink": {
                                            "name": "week_end_date",
                                            "type": "DateTime",
                                            "physicalType": "date"
                                        }
                                    },
                                    {
                                        "source": {
                                            "type": "String",
                                            "ordinal": 7
                                        },
                                        "sink": {
                                            "name": "new_cases",
                                            "type": "Int64",
                                            "physicalType": "bigint"
                                        }
                                    },
                                    {
                                        "source": {
                                            "type": "String",
                                            "ordinal": 8
                                        },
                                        "sink": {
                                            "name": "tests_done",
                                            "type": "Int64",
                                            "physicalType": "bigint"
                                        }
                                    },
                                    {
                                        "source": {
                                            "type": "String",
                                            "ordinal": 9
                                        },
                                        "sink": {
                                            "name": "population",
                                            "type": "Int64",
                                            "physicalType": "bigint"
                                        }
                                    },
                                    {
                                        "source": {
                                            "type": "String",
                                            "physicalType": "String",
                                            "ordinal": 12
                                        },
                                        "sink": {
                                            "name": "testing_data_source",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        }
                                    }
                                ],
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_testing",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_sql_testing",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "folder": {
                    "name": "SQLize"
                },
                "annotations": [],
                "lastPublishTime": "2024-08-23T11:53:52Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/ds_testing')]",
                "[concat(variables('factoryId'), '/datasets/ds_sql_testing')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ds_cases_deaths_processed')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AzureDataLakeStorage1",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "Process"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileName": "part-00000-207c01ce-1c87-46a0-b852-1c5bc88613a7-c000.csv",
                        "folderPath": "processed",
                        "fileSystem": "raw"
                    },
                    "columnDelimiter": ",",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ds_country_lookup')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AzureDataLakeStorage1",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "Lookup"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileName": "country_lookup.csv",
                        "folderPath": "country_lookup",
                        "fileSystem": "lookup"
                    },
                    "columnDelimiter": ",",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": [
                    {
                        "name": "country",
                        "type": "String"
                    },
                    {
                        "name": "country_code_2_digit",
                        "type": "String"
                    },
                    {
                        "name": "country_code_3_digit",
                        "type": "String"
                    },
                    {
                        "name": "continent",
                        "type": "String"
                    },
                    {
                        "name": "population",
                        "type": "String"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ds_daily_hospital_admissions')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AzureDataLakeStorage1",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "Process"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileName": "daily_hospital_admissions.csv",
                        "folderPath": "processed/hospital_daily",
                        "fileSystem": "raw"
                    },
                    "columnDelimiter": ",",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ds_dim_date')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AzureDataLakeStorage1",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "Lookup"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileName": "dim_date.csv",
                        "folderPath": "dim_date",
                        "fileSystem": "lookup"
                    },
                    "columnDelimiter": ",",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": [
                    {
                        "name": "date_key",
                        "type": "String"
                    },
                    {
                        "name": "date",
                        "type": "String"
                    },
                    {
                        "name": "year",
                        "type": "String"
                    },
                    {
                        "name": "month",
                        "type": "String"
                    },
                    {
                        "name": "day",
                        "type": "String"
                    },
                    {
                        "name": "day_name",
                        "type": "String"
                    },
                    {
                        "name": "day_of_year",
                        "type": "String"
                    },
                    {
                        "name": "week_of_month",
                        "type": "String"
                    },
                    {
                        "name": "week_of_year",
                        "type": "String"
                    },
                    {
                        "name": "month_name",
                        "type": "String"
                    },
                    {
                        "name": "year_month",
                        "type": "String"
                    },
                    {
                        "name": "year_week",
                        "type": "String"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ds_githubECDCdata_HTTP')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "ls_http_github",
                    "type": "LinkedServiceReference",
                    "parameters": {
                        "sourceBaseURL": {
                            "value": "@dataset().baseURL",
                            "type": "Expression"
                        }
                    }
                },
                "parameters": {
                    "relativeURL": {
                        "type": "string"
                    },
                    "baseURL": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "Raw"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "HttpServerLocation",
                        "relativeUrl": {
                            "value": "@dataset().relativeURL",
                            "type": "Expression"
                        }
                    },
                    "columnDelimiter": ",",
                    "rowDelimiter": "\n",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": null
                },
                "schema": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/ls_http_github')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ds_githubECDCdata_dl')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "ls_adls_covidreportingslselke",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "filename": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "Raw"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileName": {
                            "value": "@dataset().filename",
                            "type": "Expression"
                        },
                        "folderPath": "ecdc",
                        "fileSystem": "raw"
                    },
                    "columnDelimiter": ",",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/ls_adls_covidreportingslselke')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ds_github_ecdc_filelist')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "ls_ablob_covidreportingstorageselke",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "Raw"
                },
                "annotations": [],
                "type": "Json",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobStorageLocation",
                        "fileName": "githubusercontent_ecdc_file_list.json",
                        "container": "configs"
                    }
                },
                "schema": {
                    "type": "object",
                    "properties": {
                        "sourceBaseURL": {
                            "type": "string"
                        },
                        "sourceRelativeURL": {
                            "type": "string"
                        },
                        "sinkFileName": {
                            "type": "string"
                        }
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/ls_ablob_covidreportingstorageselke')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ds_hospital_admissions_raw')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AzureDataLakeStorage1",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "Raw"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileName": "hospital_admissions.csv",
                        "folderPath": "ecdc/hospital_admissions",
                        "fileSystem": "raw"
                    },
                    "columnDelimiter": ",",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": [
                    {
                        "name": "country",
                        "type": "String"
                    },
                    {
                        "name": "indicator",
                        "type": "String"
                    },
                    {
                        "name": "date",
                        "type": "String"
                    },
                    {
                        "name": "year_week",
                        "type": "String"
                    },
                    {
                        "name": "value",
                        "type": "String"
                    },
                    {
                        "name": "source",
                        "type": "String"
                    },
                    {
                        "name": "url",
                        "type": "String"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ds_population_raw_gz')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "ls_ablob_covidreportingstorageselke",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "Raw"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobStorageLocation",
                        "fileName": "population_by_age.tsv.gz",
                        "container": "population"
                    },
                    "columnDelimiter": "\t",
                    "compressionCodec": "gzip",
                    "compressionLevel": "Optimal",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/ls_ablob_covidreportingstorageselke')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ds_population_raw_tsv')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "ls_adls_covidreportingslselke",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "Raw"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileName": "population_by_age.tsv",
                        "folderPath": "Population",
                        "fileSystem": "raw"
                    },
                    "columnDelimiter": "\t",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/ls_adls_covidreportingslselke')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ds_raw_cases_deaths')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "ls_adls_covidreportingslselke",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "Raw"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileName": "cases_deaths.csv",
                        "folderPath": "ecdc/cases_deaths",
                        "fileSystem": "raw"
                    },
                    "columnDelimiter": ",",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/ls_adls_covidreportingslselke')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ds_sql_cases_deaths')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "ls_sql_covid_db",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "SQL"
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [],
                "typeProperties": {
                    "schema": "covid_reporting",
                    "table": "cases_and_deaths"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/ls_sql_covid_db')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ds_sql_daily_admissions')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "ls_sql_covid_db",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "SQL"
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [
                    {
                        "name": "country",
                        "type": "varchar"
                    },
                    {
                        "name": "country_code_2_digit",
                        "type": "varchar"
                    },
                    {
                        "name": "country_code_3_digit",
                        "type": "varchar"
                    },
                    {
                        "name": "population",
                        "type": "bigint",
                        "precision": 19
                    },
                    {
                        "name": "reported_date",
                        "type": "date"
                    },
                    {
                        "name": "hospital_occupancy_count",
                        "type": "bigint",
                        "precision": 19
                    },
                    {
                        "name": "icu_occupancy_count",
                        "type": "bigint",
                        "precision": 19
                    },
                    {
                        "name": "source",
                        "type": "varchar"
                    }
                ],
                "typeProperties": {
                    "schema": "covid_reporting",
                    "table": "hospital_admissions_daily"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/ls_sql_covid_db')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ds_sql_testing')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "ls_sql_covid_db",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "SQL"
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [
                    {
                        "name": "country",
                        "type": "varchar"
                    },
                    {
                        "name": "country_code_2_digit",
                        "type": "varchar"
                    },
                    {
                        "name": "country_code_3_digit",
                        "type": "varchar"
                    },
                    {
                        "name": "year_week",
                        "type": "varchar"
                    },
                    {
                        "name": "week_start_date",
                        "type": "date"
                    },
                    {
                        "name": "week_end_date",
                        "type": "date"
                    },
                    {
                        "name": "new_cases",
                        "type": "bigint",
                        "precision": 19
                    },
                    {
                        "name": "tests_done",
                        "type": "bigint",
                        "precision": 19
                    },
                    {
                        "name": "population",
                        "type": "bigint",
                        "precision": 19
                    },
                    {
                        "name": "testing_data_source",
                        "type": "varchar"
                    }
                ],
                "typeProperties": {
                    "schema": "covid_reporting",
                    "table": "testing"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/ls_sql_covid_db')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ds_testing')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AzureDataLakeStorage1",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "Process"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileName": "000000_0",
                        "folderPath": "ecdc/testing",
                        "fileSystem": "raw"
                    },
                    "columnDelimiter": ",",
                    "escapeChar": "\\",
                    "firstRowAsHeader": false,
                    "quoteChar": "\""
                },
                "schema": [
                    {
                        "type": "String"
                    },
                    {
                        "type": "String"
                    },
                    {
                        "type": "String"
                    },
                    {
                        "type": "String"
                    },
                    {
                        "type": "String"
                    },
                    {
                        "type": "String"
                    },
                    {
                        "type": "String"
                    },
                    {
                        "type": "String"
                    },
                    {
                        "type": "String"
                    },
                    {
                        "type": "String"
                    },
                    {
                        "type": "String"
                    },
                    {
                        "type": "String"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ds_weekly_hospital_admissions')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AzureDataLakeStorage1",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "Process"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileName": "weekly_hospital_admissions.csv",
                        "folderPath": "processed",
                        "fileSystem": "raw"
                    },
                    "columnDelimiter": ",",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage1')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureBlobFS",
                "typeProperties": {
                    "url": "[parameters('AzureDataLakeStorage1_properties_typeProperties_url')]",
                    "accountKey": {
                        "type": "SecureString",
                        "value": "[parameters('AzureDataLakeStorage1_accountKey')]"
                    }
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/ls_ablob_covidreportingstorageselke')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureBlobStorage",
                "typeProperties": {
                    "connectionString": "[parameters('ls_ablob_covidreportingstorageselke_connectionString')]"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/ls_adls_covidreportingslselke')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureBlobFS",
                "typeProperties": {
                    "url": "[parameters('ls_adls_covidreportingslselke_properties_typeProperties_url')]",
                    "accountKey": {
                        "type": "SecureString",
                        "value": "[parameters('ls_adls_covidreportingslselke_accountKey')]"
                    }
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/ls_databricks_reporting')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureDatabricks",
                "typeProperties": {
                    "domain": "https://adb-661435829559501.1.azuredatabricks.net",
                    "accessToken": {
                        "type": "SecureString",
                        "value": "[parameters('ls_databricks_reporting_accessToken')]"
                    },
                    "existingClusterId": "[parameters('ls_databricks_reporting_properties_typeProperties_existingClusterId')]"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/ls_http_github')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "parameters": {
                    "sourceBaseURL": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "HttpServer",
                "typeProperties": {
                    "url": "[parameters('ls_http_github_properties_typeProperties_url')]",
                    "enableServerCertificateValidation": true,
                    "authenticationType": "Anonymous"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/ls_sql_covid_db')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureSqlDatabase",
                "typeProperties": {
                    "server": "[parameters('ls_sql_covid_db_properties_typeProperties_server')]",
                    "database": "[parameters('ls_sql_covid_db_properties_typeProperties_database')]",
                    "encrypt": "mandatory",
                    "trustServerCertificate": false,
                    "authenticationType": "SQL",
                    "userName": "[parameters('ls_sql_covid_db_properties_typeProperties_userName')]",
                    "password": {
                        "type": "SecureString",
                        "value": "[parameters('ls_sql_covid_db_password')]"
                    }
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/tr_ingest_ecdc_tumbling_window')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "runtimeState": "Started",
                "pipeline": {
                    "pipelineReference": {
                        "referenceName": "pl_ingest_raw_data",
                        "type": "PipelineReference"
                    },
                    "parameters": {}
                },
                "type": "TumblingWindowTrigger",
                "typeProperties": {
                    "frequency": "Hour",
                    "interval": 24,
                    "startTime": "2024-08-21T00:00:00Z",
                    "endTime": "2024-08-24T13:52:04Z",
                    "delay": "00:00:00",
                    "maxConcurrency": 50,
                    "retryPolicy": {
                        "intervalInSeconds": 30
                    },
                    "dependsOn": []
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/pl_ingest_raw_data')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/tr_population_data_arrive')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "runtimeState": "Started",
                "pipelines": [
                    {
                        "pipelineReference": {
                            "referenceName": "pl_execute_population_pipelines",
                            "type": "PipelineReference"
                        },
                        "parameters": {}
                    },
                    {
                        "pipelineReference": {
                            "referenceName": "pl_ingest_population_data",
                            "type": "PipelineReference"
                        },
                        "parameters": {}
                    }
                ],
                "type": "BlobEventsTrigger",
                "typeProperties": {
                    "blobPathBeginsWith": "/population/blobs/population_by_age.tsv.gz",
                    "ignoreEmptyBlobs": true,
                    "scope": "[parameters('tr_population_data_arrive_properties_typeProperties_scope')]",
                    "events": [
                        "Microsoft.Storage.BlobCreated"
                    ]
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/pl_execute_population_pipelines')]",
                "[concat(variables('factoryId'), '/pipelines/pl_ingest_population_data')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/tr_process_cases_deaths')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "runtimeState": "Started",
                "pipeline": {
                    "pipelineReference": {
                        "referenceName": "pl_dataflow_cases_deaths",
                        "type": "PipelineReference"
                    },
                    "parameters": {}
                },
                "type": "TumblingWindowTrigger",
                "typeProperties": {
                    "frequency": "Hour",
                    "interval": 24,
                    "startTime": "2024-08-21T00:00:00Z",
                    "endTime": "2024-08-24T13:54:12Z",
                    "delay": "00:00:00",
                    "maxConcurrency": 50,
                    "retryPolicy": {
                        "intervalInSeconds": 30
                    },
                    "dependsOn": [
                        {
                            "type": "TumblingWindowTriggerDependencyReference",
                            "referenceTrigger": {
                                "referenceName": "tr_ingest_ecdc_tumbling_window",
                                "type": "TriggerReference"
                            }
                        }
                    ]
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/pl_dataflow_cases_deaths')]",
                "[concat(variables('factoryId'), '/triggers/tr_ingest_ecdc_tumbling_window')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/tr_process_hospital_admissions_data')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "runtimeState": "Started",
                "pipeline": {
                    "pipelineReference": {
                        "referenceName": "pl_dataflow_admissions",
                        "type": "PipelineReference"
                    },
                    "parameters": {}
                },
                "type": "TumblingWindowTrigger",
                "typeProperties": {
                    "frequency": "Hour",
                    "interval": 24,
                    "startTime": "2024-08-21T00:00:00Z",
                    "endTime": "2024-08-24T13:53:55Z",
                    "delay": "00:00:00",
                    "maxConcurrency": 50,
                    "retryPolicy": {
                        "intervalInSeconds": 30
                    },
                    "dependsOn": [
                        {
                            "type": "TumblingWindowTriggerDependencyReference",
                            "referenceTrigger": {
                                "referenceName": "tr_ingest_ecdc_tumbling_window",
                                "type": "TriggerReference"
                            }
                        }
                    ]
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/pl_dataflow_admissions')]",
                "[concat(variables('factoryId'), '/triggers/tr_ingest_ecdc_tumbling_window')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/tr_sqlize_cases_deaths')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "runtimeState": "Started",
                "pipeline": {
                    "pipelineReference": {
                        "referenceName": "pl_sqlize_cases_deaths",
                        "type": "PipelineReference"
                    },
                    "parameters": {}
                },
                "type": "TumblingWindowTrigger",
                "typeProperties": {
                    "frequency": "Hour",
                    "interval": 24,
                    "startTime": "2024-08-21T00:00:00Z",
                    "endTime": "2024-08-24T13:54:49Z",
                    "delay": "00:00:00",
                    "maxConcurrency": 50,
                    "retryPolicy": {
                        "intervalInSeconds": 30
                    },
                    "dependsOn": [
                        {
                            "type": "TumblingWindowTriggerDependencyReference",
                            "referenceTrigger": {
                                "referenceName": "tr_process_cases_deaths",
                                "type": "TriggerReference"
                            }
                        }
                    ]
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/pl_sqlize_cases_deaths')]",
                "[concat(variables('factoryId'), '/triggers/tr_process_cases_deaths')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/tr_sqlize_hospital_admissions')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "runtimeState": "Started",
                "pipeline": {
                    "pipelineReference": {
                        "referenceName": "pl_sqlize_hospital_admissions",
                        "type": "PipelineReference"
                    },
                    "parameters": {}
                },
                "type": "TumblingWindowTrigger",
                "typeProperties": {
                    "frequency": "Hour",
                    "interval": 24,
                    "startTime": "2024-08-21T00:00:00Z",
                    "delay": "00:00:00",
                    "maxConcurrency": 50,
                    "retryPolicy": {
                        "intervalInSeconds": 30
                    },
                    "dependsOn": [
                        {
                            "type": "TumblingWindowTriggerDependencyReference",
                            "referenceTrigger": {
                                "referenceName": "tr_process_hospital_admissions_data",
                                "type": "TriggerReference"
                            }
                        }
                    ]
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/pl_sqlize_hospital_admissions')]",
                "[concat(variables('factoryId'), '/triggers/tr_process_hospital_admissions_data')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/df_transform_cases_deaths')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "ds_raw_cases_deaths",
                                "type": "DatasetReference"
                            },
                            "name": "SourceCasesDeaths"
                        },
                        {
                            "dataset": {
                                "referenceName": "ds_country_lookup",
                                "type": "DatasetReference"
                            },
                            "name": "CountryLookup"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "ds_cases_deaths_processed",
                                "type": "DatasetReference"
                            },
                            "name": "CasesDeathSink"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "FilterEurope"
                        },
                        {
                            "name": "SelectRequiredColumns"
                        },
                        {
                            "name": "PivotCases"
                        },
                        {
                            "name": "LookupCountry"
                        },
                        {
                            "name": "select1"
                        }
                    ],
                    "scriptLines": [
                        "source(output(",
                        "          country as string,",
                        "          country_code as string,",
                        "          continent as string,",
                        "          population as integer,",
                        "          indicator as string,",
                        "          daily_count as integer,",
                        "          date as date,",
                        "          rate_14_day as double,",
                        "          source as string",
                        "     ),",
                        "     allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     ignoreNoFilesFound: false) ~> SourceCasesDeaths",
                        "source(output(",
                        "          country as string,",
                        "          country_code_2_digit as string,",
                        "          country_code_3_digit as string,",
                        "          continent as string,",
                        "          population as string",
                        "     ),",
                        "     allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     ignoreNoFilesFound: false) ~> CountryLookup",
                        "SourceCasesDeaths filter(continent == \"Europe\" && not(isNull(country_code))) ~> FilterEurope",
                        "PivotCases select(mapColumn(",
                        "          country,",
                        "          country_code,",
                        "          population,",
                        "          source,",
                        "          count_confirmed_cases = {count_confirmed cases},",
                        "          count_deaths,",
                        "          each(match(name==\"date\"),",
                        "               'reported_date' = $$)",
                        "     ),",
                        "     skipDuplicateMapInputs: false,",
                        "     skipDuplicateMapOutputs: false) ~> SelectRequiredColumns",
                        "FilterEurope pivot(groupBy(country,",
                        "          country_code,",
                        "          population,",
                        "          continent,",
                        "          date,",
                        "          rate_14_day,",
                        "          source),",
                        "     pivotBy(indicator, ['confirmed cases', 'deaths']),",
                        "     count = sum(daily_count),",
                        "     columnNaming: '$N_$V',",
                        "     lateral: true) ~> PivotCases",
                        "SelectRequiredColumns, CountryLookup lookup(SelectRequiredColumns@country == CountryLookup@country,",
                        "     multiple: false,",
                        "     pickup: 'any',",
                        "     broadcast: 'auto')~> LookupCountry",
                        "LookupCountry select(mapColumn(",
                        "          country = SelectRequiredColumns@country,",
                        "          country_code_2_digit,",
                        "          country_code_3_digit,",
                        "          population = SelectRequiredColumns@population,",
                        "          count_confirmed_cases,",
                        "          count_deaths,",
                        "          reported_date,",
                        "          source",
                        "     ),",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true) ~> select1",
                        "select1 sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     umask: 0022,",
                        "     preCommands: [],",
                        "     postCommands: [],",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true) ~> CasesDeathSink"
                    ]
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/ds_raw_cases_deaths')]",
                "[concat(variables('factoryId'), '/datasets/ds_country_lookup')]",
                "[concat(variables('factoryId'), '/datasets/ds_cases_deaths_processed')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/df_transform_hospitalizations')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "ds_hospital_admissions_raw",
                                "type": "DatasetReference"
                            },
                            "name": "SourceHospitalAdmissions"
                        },
                        {
                            "dataset": {
                                "referenceName": "ds_country_lookup",
                                "type": "DatasetReference"
                            },
                            "name": "CountryLookup"
                        },
                        {
                            "dataset": {
                                "referenceName": "ds_dim_date",
                                "type": "DatasetReference"
                            },
                            "name": "DimDate"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "ds_weekly_hospital_admissions",
                                "type": "DatasetReference"
                            },
                            "name": "SinkWeekly"
                        },
                        {
                            "dataset": {
                                "referenceName": "ds_daily_hospital_admissions",
                                "type": "DatasetReference"
                            },
                            "name": "SinkDaily"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "SelectColumnsSource"
                        },
                        {
                            "name": "lookup1"
                        },
                        {
                            "name": "SelectColumnsLookUp"
                        },
                        {
                            "name": "SplitSelect"
                        },
                        {
                            "name": "AddDimDate"
                        },
                        {
                            "name": "JoinWithDate"
                        },
                        {
                            "name": "PivotWeekly"
                        },
                        {
                            "name": "PivotDaily"
                        },
                        {
                            "name": "SortWeekly"
                        },
                        {
                            "name": "SortDaily"
                        },
                        {
                            "name": "SelectWeekly"
                        },
                        {
                            "name": "SelectDaily"
                        }
                    ],
                    "scriptLines": [
                        "source(output(",
                        "          country as string,",
                        "          indicator as string,",
                        "          date as date,",
                        "          year_week as string,",
                        "          value as double,",
                        "          source as string,",
                        "          url as string",
                        "     ),",
                        "     allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     ignoreNoFilesFound: false) ~> SourceHospitalAdmissions",
                        "source(output(",
                        "          country as string,",
                        "          country_code_2_digit as string,",
                        "          country_code_3_digit as string,",
                        "          continent as string,",
                        "          population as string",
                        "     ),",
                        "     allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     ignoreNoFilesFound: false) ~> CountryLookup",
                        "source(output(",
                        "          date_key as date,",
                        "          date as date,",
                        "          year as string,",
                        "          month as short,",
                        "          day as short,",
                        "          day_name as string,",
                        "          day_of_year as short,",
                        "          week_of_month as short,",
                        "          week_of_year as string,",
                        "          month_name as string,",
                        "          year_month as integer,",
                        "          year_week as integer",
                        "     ),",
                        "     allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     ignoreNoFilesFound: false) ~> DimDate",
                        "SourceHospitalAdmissions select(mapColumn(",
                        "          country,",
                        "          indicator,",
                        "          reported_date = date,",
                        "          reported_year_week = year_week,",
                        "          value,",
                        "          source",
                        "     ),",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true) ~> SelectColumnsSource",
                        "SelectColumnsSource, CountryLookup lookup(SelectColumnsSource@country == CountryLookup@country,",
                        "     multiple: false,",
                        "     pickup: 'any',",
                        "     broadcast: 'auto')~> lookup1",
                        "lookup1 select(mapColumn(",
                        "          country = SelectColumnsSource@country,",
                        "          country_code_2_digit,",
                        "          country_code_3_digit,",
                        "          indicator,",
                        "          reported_date,",
                        "          reported_year_week,",
                        "          value,",
                        "          source,",
                        "          country = CountryLookup@country,",
                        "          population",
                        "     ),",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true) ~> SelectColumnsLookUp",
                        "SelectColumnsLookUp split(indicator == \"Weekly new hospital admissions per 100k\" || indicator == \"Weekly new ICU admissions per 100k\",",
                        "     disjoint: false) ~> SplitSelect@(WeeklyRecords, DailyRecords)",
                        "DimDate aggregate(groupBy(ecdc_year_week = year+'-W'+lpad(week_of_year,2,'0')),",
                        "     week_start_date = min(date),",
                        "          week_end_date = max(date)) ~> AddDimDate",
                        "SplitSelect@WeeklyRecords, AddDimDate join(reported_year_week == ecdc_year_week,",
                        "     joinType:'inner',",
                        "     matchType:'exact',",
                        "     ignoreSpaces: false,",
                        "     broadcast: 'auto')~> JoinWithDate",
                        "JoinWithDate pivot(groupBy(country,",
                        "          country_code_2_digit,",
                        "          country_code_3_digit,",
                        "          reported_year_week,",
                        "          source,",
                        "          population,",
                        "          week_start_date,",
                        "          week_end_date),",
                        "     pivotBy(indicator, ['Weekly new hospital admissions per 100k', 'Weekly new ICU admissions per 100k']),",
                        "     count = sum(value),",
                        "     columnNaming: '$N_$V',",
                        "     lateral: true) ~> PivotWeekly",
                        "SplitSelect@DailyRecords pivot(groupBy(country,",
                        "          country_code_2_digit,",
                        "          country_code_3_digit,",
                        "          source,",
                        "          population,",
                        "          reported_date),",
                        "     pivotBy(indicator, ['Daily hospital occupancy', 'Daily ICU occupancy']),",
                        "     count = sum(value),",
                        "     columnNaming: '$N_$V',",
                        "     lateral: true) ~> PivotDaily",
                        "PivotWeekly sort(desc(reported_year_week, true),",
                        "     asc(country, true)) ~> SortWeekly",
                        "PivotDaily sort(desc(reported_date, true),",
                        "     asc(country, true)) ~> SortDaily",
                        "SortWeekly select(mapColumn(",
                        "          country,",
                        "          country_code_2_digit,",
                        "          country_code_3_digit,",
                        "          population,",
                        "          reported_year_week,",
                        "          reported_week_start_date = week_start_date,",
                        "          reported_week_end_date = week_end_date,",
                        "          new_hospital_occupancy_count = {count_Weekly new hospital admissions per 100k},",
                        "          new_icu_occupancy_count = {count_Weekly new ICU admissions per 100k},",
                        "          source",
                        "     ),",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true) ~> SelectWeekly",
                        "SortDaily select(mapColumn(",
                        "          country,",
                        "          country_code_2_digit,",
                        "          country_code_3_digit,",
                        "          source,",
                        "          population,",
                        "          reported_date,",
                        "          hospital_occupancy_count = {count_Daily hospital occupancy},",
                        "          icu_occupancy_count = {count_Daily ICU occupancy}",
                        "     ),",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true) ~> SelectDaily",
                        "SelectWeekly sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     umask: 0022,",
                        "     preCommands: [],",
                        "     postCommands: [],",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true) ~> SinkWeekly",
                        "SelectDaily sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     umask: 0022,",
                        "     preCommands: [],",
                        "     postCommands: [],",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true) ~> SinkDaily"
                    ]
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/ds_hospital_admissions_raw')]",
                "[concat(variables('factoryId'), '/datasets/ds_country_lookup')]",
                "[concat(variables('factoryId'), '/datasets/ds_dim_date')]",
                "[concat(variables('factoryId'), '/datasets/ds_weekly_hospital_admissions')]",
                "[concat(variables('factoryId'), '/datasets/ds_daily_hospital_admissions')]"
            ]
        }
    ]
}